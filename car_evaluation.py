# -*- coding: utf-8 -*-
"""Car Evaluation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VbhSgtswP6GZ20lkPDbmuL1MD0keC9Rk
"""

import sklearn
from sklearn.utils import shuffle
from sklearn.neighbors import KNeighborsClassifier
import pandas as pd
import numpy as np
from sklearn import linear_model, preprocessing

data = pd.read_csv("car.data")
print(data.head)

#convert non-numerical data into numeric data
le = preprocessing.LabelEncoder()
buying = le.fit_transform(list(data["buying"]))
maint = le.fit_transform(list(data["maint"]))
door = le.fit_transform(list(data["door"]))
persons = le.fit_transform(list(data["persons"]))
lug_boot = le.fit_transform(list(data["lug_boot"]))
safety = le.fit_transform(list(data["safety"]))
classes = le.fit_transform(list(data["class"]))

print(buying)

predict = "class"

#x is features
x = list(zip(buying, maint, door, persons, lug_boot, safety))

#y is labels
y = list(classes)

#split the training set
x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y, test_size=0.1)
print(x_train, y_test)

#create model and set the number of nearest neighbors
#play around with the nearest neighbors to find the best accuracy
model = KNeighborsClassifier(n_neighbors=7)

model.fit(x_train, y_train)
acc = model.score(x_test, y_test) * 100
print("The accuracy is: " + str(round(acc,2)) + "%")

predicted = model.predict(x_test)
names = ["unacc", "acc", "good", "vgood"]

for x in range(len(predicted)):
  print("Predicted: ", predicted[x], "Data: ", x_test[x], "Actual: ", y_test[x])
  #n = model.kneighbors([x_test[x]], 7, True)
  #print("N: ", n)

